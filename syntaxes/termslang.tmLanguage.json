{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "termslang",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#types"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#structs"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#vars"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.termslang",
					"match": "\\b(return|println|print|let|func|updt|cll|struct|import)\\b"
				},
				{
					"name": "keyword.control.termslang",
					"match": "\\b(if|else|loop|continue|break)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.termslang",
					"begin": "\"",
					"end": "\""
				},
				{
					"name": "string.quoted.single.termslang",
					"begin": "'",
					"end": "'"
				},
				{
					"name": "string.quoted.other.termslang",
					"begin": "`",
					"end": "`"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"match": "(#).*$\\n?",
					"name": "comment.line.termslang"
				}
			]
		},
		"constant": {
			"match": "\\b(?:true|false|null)\\b",
			"name": "constant.language.termslang"
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.float.termslang",
					"match": "\\b((?<!@)\\d[\\d_]*\\.[\\d_]*)\\b"
				},
				{
					"name": "constant.numeric.termslang",
					"match": "\\b((?<![@\\.])\\d[\\d_]*)\\b"
				}
			]
		},
		"types": {
			"match": "(?<![@_[A-Za-z]])(int|str|bool|float)\\b",
			"name": "entity.name.type.termslang"
		},
		"operators": {
			"patterns": [
				{
					"match": "(?: <|>|\\+|\\-|=|%|,|\\*|\\.|~)",
					"name": "keyword.operator.termslang"
				},
				{
					"match": "(?: \\$)",
					"name": "keyword.operator.new.termslang"
				}
			]
		},
		"structs": {
			"patterns": [
				{
					"begin": "(?<=struct)[\\s]{1,}",
					"end": "(?=[^\\w\\d@_])",
					"name": "entity.name.class.termslang"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"begin": "(?<=func\\s{1,}[\\w\\d@_]{1,}(\\s*\\[\\s*\\])*)\\s{1,}",
					"end": "(?=[^\\w\\d@_])",
					"name": "entity.name.function.termslang",
					"beginCaptures": {
						"0": {
							"name": "storage.type.function.termslang"
						}
					}
				}
			]
		},
		"vars": {
			"patterns": [
				{
					"match": "(?<![\\w\\d@])@this\\b",
					"name": "variable.language"
				}
			]
		}
	},
	"scopeName": "source.termslang"
}